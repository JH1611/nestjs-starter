generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Permission {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  key            String           @unique
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  rolePermission RolePermission[]
}

model Role {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  key            String           @unique
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  rolePermission RolePermission[]
  user           User[]
}

model RolePermission {
  roleId       Int
  permissionId Int
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@id([roleId, permissionId])
}

model User {
  id                 Int       @id @default(autoincrement())
  email              String    @unique
  firstName          String
  lastName           String
  password           String
  verifyEmailToken   String?
  resetPasswordToken String?
  verified           Boolean   @default(false)
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  sessions           Session[]
  roleId             Int
  role               Role      @relation(fields: [roleId], references: [id])
}

model Session {
  id        String   @id @default(uuid())
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "Session_userId_fkey")
}
